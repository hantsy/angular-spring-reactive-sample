name: Server

on:
  push:
    paths-ignore:
      - "docs/**"
      - "client/**"
    branches:
      - master
      - release/*
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build-server:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v2.3.0
        with:
          java-version: 11
          distribution: "zulu"

      - name: Cache Maven packages
        uses: actions/cache@v2.1.6
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Resolve dependencies
        run: mvn clean dependency:go-offline --file server/pom.xml

      - name: Build with Maven
        run: mvn package --file server/pom.xml -DskipTests

      # - name: Cache SonarCloud packages
      #   uses: actions/cache@v2.1.6
      #   with:
      #     path: ~/.sonar/cache
      #     key: ${{ runner.os }}-sonar
      #     restore-keys: ${{ runner.os }}-sonar

      # - name: Run Docker Compose
      #   run: docker-compose up mongodb

      # - name: Build and analyze
      #   run: |
      #     mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar --file server/pom.xml -Pcoverage
      #   env:
      #     # Needed to get some information about the pull request, if any
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     # SonarCloud access token should be generated from https://sonarcloud.io/account/security/
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build Docker Image
        run: mvn spring-boot:build-image --file server/pom.xml -DskipTests

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push Docker Image
        run: docker push hantsy/angular-spring-reactive-sample-server
